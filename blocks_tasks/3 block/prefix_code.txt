defmodule Solution do
  defp maybe_slice(0, _left_part_s), do: ""
                                       
  defp maybe_slice(res, left_part_s), do: String.slice(left_part_s, 0..res - 1)

  @spec longest_common_prefix(strs :: [String.t]) :: String.t
  def longest_common_prefix(strs) do
    if length(strs) == 1 do
      hd(strs)
    else   
      left_part_s = longest_common_prefix(Enum.slice(strs, 0..div(length(strs), 2) - 1))
      right_part_s = longest_common_prefix(Enum.slice(strs, div(length(strs), 2) ..length(strs) - 1))

      res = for n <- 0..String.length(left_part_s) - 1 do
        if String.starts_with?(right_part_s, String.slice(left_part_s, 0..n)) do
          pref_length = n + 1
        end
      end
      |> Enum.filter(fn(x) -> is_integer(x) end)
      |> Enum.max(fn -> 0 end)
      
      maybe_slice(res, left_part_s)
 
    end
  end
end